{"version":3,"sources":["Components/NewPostLink/NewPostLink.jsx","Components/NewPostButton/NewPostButton.jsx","Components/PostsContext/PostsContext.jsx","js/API.js","Components/PreviousPageButton/PreviousPageButton.jsx","Components/Post/Post.jsx","Components/Posts/Posts.jsx","Components/HomePage/HomePage.jsx","Components/CreateForm/CreateForm.jsx","Components/NewPostWindow/NewPostWindow.jsx","Components/PostView/PostView.jsx","Components/PostsProvider/PostsProvider.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["NewPostLink","to","className","NewPostButton","PostsContext","createContext","API","this","url","a","fetch","response","json","result","console","log","id","content","method","body","JSON","stringify","PreviousPageButton","history","useHistory","type","onClick","goBack","icon","faTimes","size","api","Post","props","inputRef","useRef","match","posts","useContext","data","fetchPosts","post","find","params","sendChanges","updateMessage","faSmile","created","children","Fragment","ref","defaultValue","current","value","Posts","map","HomePage","CreateForm","nextId","sendMessage","addMessage","action","name","NewPostWindow","PostView","deletePost","deleteMessage","PostsProvider","useState","setData","read","useEffect","Provider","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7959700d.chunk.js","sourcesContent":["import './NewPostLink.scss';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NewPostLink() {\r\n  return (\r\n    <Link to=\"./posts/new\" className=\"new-post-button__link\">\r\n      Создать пост     \r\n    </Link>\r\n  )\r\n}","import './NewPostButton.scss';\r\nimport React from 'react'\r\nimport NewPostLink from '../NewPostLink/NewPostLink'\r\n\r\nexport default function NewPostButton() {\r\n  return (\r\n    <div className=\"new-post-button\">\r\n      <NewPostLink />\r\n    </div>\r\n  )\r\n}","import { createContext } from \"react\";\r\n\r\nconst PostsContext = createContext([]);\r\nexport default PostsContext;","export default class API {\r\n  constructor() {\r\n    this.url = 'http://localhost:7070';\r\n  }\r\n\r\n  async read() {\r\n    try {\r\n      this.response = await fetch(`${this.url}/posts`);\r\n      this.result = await this.response.json();\r\n      return this.result;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async addMessage(id, content) {\r\n    if (content === '') return;\r\n    try {\r\n      await fetch(`${this.url}/posts`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          id,\r\n          content,\r\n        })\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async deleteMessage(id) {\r\n    try {\r\n      await fetch(`${this.url}/posts/${id}`, {\r\n        method: 'DELETE',\r\n        body: JSON.stringify({\r\n          id,\r\n        })\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async updateMessage(id, content) {\r\n    if (content === '') return;\r\n    try {\r\n      await fetch(`${this.url}/posts`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          id,\r\n          content,\r\n        })\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  \r\n};\r\n","import './PreviousPageButton.scss';\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function PreviousPageButton() {\r\n  const history = useHistory();\r\n\r\n  const goBack = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  return (\r\n      <button className=\"return-button\" type=\"button\" onClick={goBack}>\r\n        <FontAwesomeIcon icon={faTimes} size='2x' />\r\n      </button>\r\n  );\r\n}\r\n","import \"./Post.scss\";\r\nimport React, { useContext, useRef } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSmile } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PostsContext from \"../PostsContext/PostsContext\";\r\nimport API from \"../../js/API\";\r\nimport PreviousPageButton from \"../PreviousPageButton/PreviousPageButton\";\r\n\r\nconst api = new API();\r\n\r\nexport default function Post(props) {\r\n  const inputRef = useRef();\r\n  const { match } = props;\r\n  const { posts } = useContext(PostsContext).data;\r\n  const { fetchPosts } = useContext(PostsContext);\r\n  const post = match ? posts.find(post => post.id === +match.params.id) : false;\r\n  \r\n  const sendChanges = async (id, content) => {\r\n    await api.updateMessage(id, content);\r\n    await fetchPosts();\r\n  }\r\n\r\n  return (\r\n    <div className='post'>\r\n      <header className='post__header'>\r\n        <div className='post__data'>\r\n          <FontAwesomeIcon icon={faSmile} size='4x' />\r\n          <div className='post__username'>Володька</div>\r\n          <div className='post__created'>{props.created || post.created}</div>\r\n        </div>\r\n        {props.children}\r\n        {match ? <PreviousPageButton /> : null}\r\n      </header>\r\n      {match ? (\r\n        <React.Fragment>\r\n          <input ref={inputRef} className='post__content' defaultValue={post.content} />\r\n          <button onClick={() => sendChanges(post.id, inputRef.current.value)} className=\"post__save\"><Link to='../../'>Сохранить</Link></button>\r\n        </React.Fragment>\r\n      ) : (\r\n        <div className='post__content'>{props.content}</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nPost.propTypes = {\r\n  created: PropTypes.string,\r\n  content: PropTypes.string,\r\n};\r\n","import './Posts.scss'\r\nimport React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Post from '../Post/Post'\r\nimport PostsContext from '../PostsContext/PostsContext';\r\n\r\nexport default function Posts() {\r\n  const posts = useContext(PostsContext).data.posts\r\n  return (\r\n      <div className=\"posts\">\r\n        {posts.map((post) => <Link key={post.id} to={`./posts/${post.id}`}><Post {...post} /></Link>)}\r\n      </div>\r\n  )\r\n}","import React from 'react'\r\nimport NewPostButton from '../NewPostButton/NewPostButton'\r\nimport Posts from '../Posts/Posts';\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <div className=\"homepage\">\r\n      <NewPostButton />\r\n      <Posts />\r\n    </div>\r\n  )\r\n}","import './CreateForm.scss';\r\nimport React, { useContext, useRef } from 'react'\r\nimport API from '../../js/API';\r\nimport { Link } from 'react-router-dom';\r\nimport PostsContext from '../PostsContext/PostsContext';\r\n\r\nconst api = new API();\r\n\r\nexport default function CreateForm() {\r\n  const fetchPosts = useContext(PostsContext).fetchPosts;\r\n  const { nextId } = useContext(PostsContext).data; \r\n  const inputRef = useRef();\r\n\r\n  const sendMessage = async () => {\r\n    await api.addMessage(nextId, inputRef.current.value);\r\n    await fetchPosts();\r\n  }\r\n  \r\n  return (\r\n    <form action=\"\" className=\"form\">\r\n      <input ref={inputRef} type=\"text\" name=\"newMessage\" id=\"newMessage\" />\r\n      <Link className=\"form__link\" to='../' onClick={() => sendMessage()}>Опубликовать</Link>\r\n    </form>\r\n  )\r\n}","import './NewPostWindow.scss';\r\nimport React from 'react'\r\nimport CreateForm from '../CreateForm/CreateForm';\r\nimport PreviousPageButton from '../PreviousPageButton/PreviousPageButton';\r\n\r\nexport default function NewPostWindow() {\r\n  return (\r\n    <div className=\"new-post-window\">\r\n      <PreviousPageButton />\r\n      <CreateForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nNewPostWindow.propTypes = {\r\n\r\n}","import './PostView.scss';\r\nimport React, {useContext} from 'react'\r\nimport Post from '../Post/Post'\r\nimport PostsContext from '../PostsContext/PostsContext';\r\nimport PreviousPageButton from '../PreviousPageButton/PreviousPageButton';\r\nimport API from '../../js/API';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst api = new API();\r\n\r\nexport default function PostView({ match }) {\r\n  const { posts } = useContext(PostsContext).data;\r\n  const { fetchPosts } = useContext(PostsContext);\r\n  const post = posts.find(post => post.id === +match.params.id);\r\n  \r\n  const deletePost = async (id) => {\r\n    await api.deleteMessage(id);\r\n    await fetchPosts();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Post {...post}>\r\n        <PreviousPageButton />\r\n      </Post>\r\n      <div className=\"post__buttons\">\r\n        <Link to={`/ra-router-crud/edit/${post.id}`} className=\"post__button post__button_edit\">Изменить</Link>\r\n        <Link to='./../' onClick={() => deletePost(post.id)} className=\"post__button post__button_delete\">Удалить</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nPostView.propTypes = {\r\n\r\n}","import React, { useState, useEffect } from 'react'\r\nimport PostsContext from '../PostsContext/PostsContext'\r\nimport API from '../../js/API';\r\n\r\nconst api = new API();\r\n\r\nfunction PostsProvider(props) {\r\n  const [data, setData] = useState({\r\n    posts: [],\r\n    nextId: 0,\r\n  });\r\n\r\n  const fetchPosts = async () => {\r\n    const posts = await api.read();\r\n    setData(() => ({\r\n      posts: posts,\r\n      nextId: data.nextId++,\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, [])\r\n\r\n  return (\r\n    <PostsContext.Provider value={{data, fetchPosts}}>\r\n      {props.children}\r\n    </PostsContext.Provider>\r\n  )\r\n}\r\n\r\nPostsProvider.propTypes = {\r\n\r\n}\r\n\r\nexport default PostsProvider\r\n\r\n","import \"./App.scss\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./Components/HomePage/HomePage\";\nimport NewPostWindow from \"./Components/NewPostWindow/NewPostWindow\";\nimport PostView from \"./Components/PostView/PostView\";\nimport PostsProvider from \"./Components/PostsProvider/PostsProvider\";\nimport Post from \"./Components/Post/Post\";\n\nexport default function App() {\n  return (\n    <PostsProvider>\n      <Router>\n        <div className='app'>\n          <Switch>\n            <Route path='/ra-router-crud/posts/new' exact component={NewPostWindow} />\n            <Route path='/ra-router-crud/edit/:id' exact component={Post} />\n            <Route path='/ra-router-crud/posts/:id' exact component={PostView} />\n            <Route path='/ra-router-crud/' exact component={HomePage} />\n          </Switch>\n        </div>\n      </Router>\n    </PostsProvider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}